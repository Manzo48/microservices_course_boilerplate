syntax = "proto3";

package auth;

option go_package = "github.com/Manzo48/microservices_course_boilerplate/pkg/users;users";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// Enum для ролей пользователя
enum Role {
    ROLE_UNSPECIFIED = 0; // Неопределено
    USER = 1;             // Обычный пользователь
    ADMIN = 2;            // Администратор
}

// Сервис User
service UserService {
    // Создание нового пользователя
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);

    // Получение информации о пользователе по ID
    rpc GetUser(GetUserRequest) returns (GetUserResponse);

    // Обновление информации о пользователе
    rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty);

    // Удаление пользователя по ID
    rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
}

// Запрос для создания пользователя
message CreateUserRequest {
    string name = 1;
    string email = 2;
    string password = 3;
    string password_confirm = 4;
    Role role = 5;
}

// Ответ при создании пользователя
message CreateUserResponse {
    int64 id = 1;
}

// Запрос для получения информации о пользователе
message GetUserRequest {
    int64 id = 1;
}

// Ответ при получении информации о пользователе
message GetUserResponse {
    int64 id = 1;
    string name = 2;
    string email = 3;
    Role role = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

// Запрос для обновления информации о пользователе
message UpdateUserRequest {
    int64 id = 1;
    google.protobuf.StringValue name = 2;
    google.protobuf.StringValue email = 3;
    Role role = 4;
}

// Запрос для удаления пользователя
message DeleteUserRequest {
    int64 id = 1;
}
